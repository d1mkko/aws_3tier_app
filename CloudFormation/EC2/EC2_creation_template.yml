Resources:
  # Creating DB Subnet Group
  RDSDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Subnets for RDS instances"
      SubnetIds:
        - Fn::ImportValue: "3tierAppPrivateSubnetID"
        - Fn::ImportValue: "3tierAppPublicSubnetID"
      Tags:
        - Key: Name
          Value: RDSDBSubnetGroup

  # Creating Public Instance Launch Template + Auto Scaling Group
  3TierAppPublicLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: 3-tier-app-public-launch-template
      LaunchTemplateData: 
        ImageId: 'ami-06ee6255945a96aba'
        InstanceType: t2.micro
        SecurityGroupIds:
        - Fn::ImportValue: "3tierAppPublicSecGroupId"

  3TierAppPublicAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: 
          Ref: "3TierAppPublicLaunchTemplate"
        Version: 
          Fn::GetAtt: 
            - "3TierAppPublicLaunchTemplate"
            - "LatestVersionNumber"
      MaxSize: '4'
      MinSize: '2'
      VPCZoneIdentifier: 
        - Fn::ImportValue: "3tierAppPublicSubnetID"
      Tags:
        - Key: Project
          Value: 3TierApp
          PropagateAtLaunch: true

  # Creating Private Instance
  3tierAPPSinglePrivateInstance: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: "ami-06ee6255945a96aba"
      InstanceType: t2.micro
      AvailabilityZone: "eu-central-1b"
      KeyName: "simple-key-pair"
      SubnetId: 
        Fn::ImportValue: "3tierAppPrivateSubnetID"
      SecurityGroupIds: 
        - Fn::ImportValue: "3tierAppPrivateSecGroupId"
      BlockDeviceMappings: 
        - DeviceName: "/dev/xvda"
          Ebs: 
            VolumeType: "gp3"
            Iops: "200"
            DeleteOnTermination: "true"
            VolumeSize: "10"
      Tags:
        - Key: Name
          Value: 3tierAppPrivateEC2Instance

  # Creating RDS Instance
  RDS3tierAppDatabase:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: "RDS3tierAppDatabase"
      AllocatedStorage: 20
      DBInstanceClass: "db.t3.micro"
      Engine: "mysql" 
      MasterUsername: "admin"
      MasterUserPassword: "mypassword"
      VPCSecurityGroups:
        - Fn::ImportValue: "RDSInstanceSecurityGroupID"
      DBSubnetGroupName:
        Ref: "RDSDBSubnetGroup"
      Tags:
        - Key: Name
          Value: RDS3tierAppDatabase

 # Creating Load Balancer
  3TierApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: 3TierApplicationLoadBalancer
      SecurityGroups: 
        - Fn::ImportValue: "3tierAppPublicSecGroupId"    
      Subnets: 
        - Fn::ImportValue: 3tierAppPublicSubnetID
        - Fn::ImportValue: 3tierAppPrivateSubnetID
      Type: application