AWSTemplateFormatVersion: 2010-09-09
Description: Template for VPC 
#Metadata:

Parameters:
  VpcCIDR:
    Type: String
    Default: 10.0.0.0/16
    Description: Defining VPC CIDR range

  PublicSubnetCIDR:
    Type: String
    Default: 10.0.1.0/24
    Description: Defining Subnet CIDR range

  PrivateSubnetCIDR:
    Type: String
    Default: 10.0.128.0/24
    Description: Defining Subnet CIDR range

Resources:

# Public Subnet Creation 

  3tierAppVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 
        Ref: VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
       - Key: Name
         Value: 3tierAppVPC

  3tierAppInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: 3tierAppInternetGateway
  
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: 3tierAppVPC
      InternetGatewayId:
        Ref: 3tierAppInternetGateway
  
  3tierAppPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: 3tierAppVPC
      CidrBlock: 
        Ref: PublicSubnetCIDR
      AvailabilityZone: "eu-central-1a"
      Tags:
      - Key: Name
        Value: 3tierAppPublicSubnet

  3tierAppRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: 3tierAppVPC
      Tags:
      - Key: Name
        Value: 3tierAppRouteTable

  3tierAppRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: 3tierAppRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: 3tierAppInternetGateway
  
  mySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: 3tierAppPublicSubnet
      RouteTableId:
        Ref: 3tierAppRouteTable
  
  # Creating Security Group
  3tierAppPublicSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      GroupName : "3tierAppPublicSecGroup"
      VpcId: 
        Ref: 3tierAppVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

# Private Subnet Creation

  3tierAppPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: 3tierAppVPC
      CidrBlock: 
        Ref: PrivateSubnetCIDR
      AvailabilityZone: "eu-central-1b"
      Tags:
      - Key: Name
        Value: 3tierAppPrivateSubnet  

  3tierAppPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: 
        Ref: 3tierAppVPC
      Tags:
        - Key: Name
          Value: 3tierAppPrivateRouteTable

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: 3tierAppPrivateSubnet
      RouteTableId:
        Ref: 3tierAppPrivateRouteTable

  RDSVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: 
        Ref: 3tierAppVPC
      ServiceName: 
        Fn::Sub: "com.amazonaws.${AWS::Region}.rds"
      VpcEndpointType: Interface 
      SubnetIds:
        - Ref: 3tierAppPrivateSubnet 
      SecurityGroupIds:
        - Ref: 3tierAppPrivateSecGroup
      PrivateDnsEnabled: true
      Tags:
        - Key: Name
          Value: RDSVpcEndpoint

  3tierAppPrivateSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      GroupName : "3tierAppPrivateSecGroup"
      VpcId: 
        Ref: 3tierAppVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.1.0/24

# Creating RDS Security Group

  RDSInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow database access from private EC2 instances"
      VpcId: 
        Ref: 3tierAppVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "3306"  
          ToPort: "3306"
          SourceSecurityGroupId: 
            Ref: 3tierAppPrivateSecGroup
      Tags:
        - Key: Name
          Value: RDSInstanceSecurityGroup
  

Outputs:
  # Export the Security Group ID
  Exported3tierAppPublicSecGroup:
    Description: "The ID of the security group"
    Value: 
      Ref: 3tierAppPublicSecGroup  
    Export:
      Name: 3tierAppPublicSecGroupId

  Exported3tierAppPrivateSecGroupId:
    Description: "The ID of the security group"
    Value: 
      Ref: 3tierAppPrivateSecGroup  
    Export:
      Name: 3tierAppPrivateSecGroupId

  Exported3tierAppPublicSubnet:
    Description: "The ID of the security group"
    Value: 
      Ref: 3tierAppPublicSubnet  
    Export:
      Name: 3tierAppPublicSubnetID

  Exported3tierAppPrivateSubnet:
    Description: "The ID of the security group"
    Value: 
      Ref: 3tierAppPrivateSubnet  
    Export:
      Name: 3tierAppPrivateSubnetID

  ExportedRDSInstanceSecurityGroup:
    Description: "The ID of the security group"
    Value: 
      Ref: RDSInstanceSecurityGroup  
    Export:
      Name: RDSInstanceSecurityGroupID